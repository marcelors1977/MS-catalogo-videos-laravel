name: MS Catalogo de Video com Laravel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:

  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: "Iniciando os containeres"
        run: docker-compose up -d

      - name: "Chown in /var/www"
        run: docker exec -u root -t micro-videos-app chown -R www-data:www-data /var/www

      - name: "Rodando composer"
        run: docker exec -t micro-videos-app composer install --no-interaction --prefer-dist --optimize-autoloader -d /var/www

      - name: "Copiando backend .env"
        run: docker exec -t micro-videos-app cp .env.example /var/www/.env

      - name: "Copiando backend .env.testing"
        run: docker exec -t micro-videos-app cp .env.testing.example /var/www/.env.testing

      - name: "Rodando key:generate"
        run: docker exec -t micro-videos-app php /var/www/artisan key:generate
        
      - name: Run tests
        run: ./vendor/bin/phpunit -v
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        
      - name: "verificando conex√£o mysql"
        run:  docker exec -t micro-videos-db mysql --host 127.0.0.1 --port 3306 -uroot -proot -e "SHOW DATABASES"    

      - name: "Rodando migrations"
        run: docker exec -t micro-videos-app php /var/www/artisan migrate

      - name: "Rodando Phpunit"
        run: docker exec -t micro-videos-app php /var/www/vendor/bin/phpunit -c /var/www/phpunit.xml
